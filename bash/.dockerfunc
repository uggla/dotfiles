#!/bin/bash
# Bash wrappers for docker run commands

export DOCKER_REPO_PREFIX=jess

#
# Helper Functions
#
dcleanup() {
  local containers
  mapfile -t containers < <(docker ps -aq 2>/dev/null)
  docker rm "${containers[@]}" 2>/dev/null
  local volumes
  mapfile -t volumes < <(docker ps --filter status=exited -q 2>/dev/null)
  docker rm -v "${volumes[@]}" 2>/dev/null
  local images
  mapfile -t images < <(docker images --filter dangling=true -q 2>/dev/null)
  docker rmi "${images[@]}" 2>/dev/null
}
del_stopped() {
  local name=$1
  local state
  state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)

  if [[ "$state" == "false" ]]; then
    docker rm "$name"
  fi
}
rmctr() {
  # shellcheck disable=SC2068
  docker rm -f $@ 2>/dev/null || true
}
relies_on() {
  for container in "$@"; do
    local state
    state=$(docker inspect --format "{{.State.Running}}" "$container" 2>/dev/null)

    if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
      echo "$container is not running, starting it for you."
      $container
    fi
  done
}

#
# Container Aliases
#
# aws() {
#   docker run -it --rm \
#     -v "${HOME}/.aws:/root/.aws" \
#     --log-driver none \
#     --name aws \
#     ${DOCKER_REPO_PREFIX}/awscli "$@"
# }
# az() {
#   docker run -it --rm \
#     -v "${HOME}/.azure:/root/.azure" \
#     --log-driver none \
#     ${DOCKER_REPO_PREFIX}/azure-cli "$@"
# }
cadvisor() {
  docker run -d \
    --restart always \
    -v /:/rootfs:ro \
    -v /var/run:/var/run:rw \
    -v /sys:/sys:ro \
    -v /var/lib/docker/:/var/lib/docker:ro \
    -p 1234:8080 \
    --name cadvisor \
    google/cadvisor

  hostess add cadvisor "$(docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' cadvisor)"
  browser-exec "http://cadvisor:8080"
}
gcalcli() {
  docker run --rm -it \
    -v /etc/localtime:/etc/localtime:ro \
    -v "${HOME}/.gcalcli/home:/home/gcalcli/home" \
    -v "${HOME}/.gcalcli/work/oauth:/home/gcalcli/.gcalcli_oauth" \
    -v "${HOME}/.gcalcli/work/gcalclirc:/home/gcalcli/.gcalclirc" \
    --name gcalcli \
    ${DOCKER_REPO_PREFIX}/gcalcli "$@"
}
dgcloud() {
  docker run --rm -it \
    -v "${HOME}/.gcloud:/root/.config/gcloud" \
    -v "${HOME}/.ssh:/root/.ssh:ro" \
    -v "$(command -v docker):/usr/bin/docker" \
    -v /var/run/docker.sock:/var/run/docker.sock \
    --name gcloud \
    ${DOCKER_REPO_PREFIX}/gcloud "$@"
}
notify_osd() {
  del_stopped notify_osd

  docker run -d \
    -v /etc/localtime:/etc/localtime:ro \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    --net none \
    -v /etc \
    -v /home/user/.dbus \
    -v /home/user/.cache/dconf \
    -e "DISPLAY=unix${DISPLAY}" \
    --name notify_osd \
    ${DOCKER_REPO_PREFIX}/notify-osd
}
alias notify-send=notify_send
notify_send() {
  relies_on notify_osd
  local args=${*:2}
  docker exec -i notify_osd notify-send "$1" "${args}"
}
# travis() {
#   docker run -it --rm \
#     -v "${HOME}/.travis:/root/.travis" \
#     -v "$(pwd):/usr/src/repo:ro" \
#     --workdir /usr/src/repo \
#     --log-driver none \
#     ${DOCKER_REPO_PREFIX}/travis "$@"
# }
